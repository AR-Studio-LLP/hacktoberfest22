 bool static comp(pair<int,string>& a, pair<int,string>& b) {
        if (a.first != b.first) 
            return a.first > b.first;
        return a.second < b.second;
    }
    vector<string> topKFrequent(vector<string>& words, int k) {
        vector<string> ans;
        unordered_map<string,int> mp;
        for (string &s: words) mp[s]++;
        vector<pair<int,string>> vec;
        for (auto &it: mp) {
            vec.push_back(pair<int,string>{it.second,it.first});
        }
        sort(vec.begin(),vec.end(),comp); 
        int i = 0;
        while(k--) {
            ans.push_back(vec[i].second);
            ++i;
        }
        return ans;
    
    }
